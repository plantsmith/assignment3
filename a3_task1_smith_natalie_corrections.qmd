---
title: "Palmetto binary logistic regression (individual)"
author: "Natalie Smith"
format: 
  html:
    code-fold: true
    toc: true
    number-sections: true
    embed-resources: true
theme: Yeti
editor: visual
execute:
  echo: true
  message: false
  warning: false
---

# Overview:

The Florida palmetto data examines the survival, growth, and biomass estimates of two dominant palmetto species, *Serenoa repens* and *Sabal etonia*, in south-central Florida from 1981 to 2017, recorded at 5-year intervals. The dataset encompasses various variables, but for this analysis, we aim to focus on plant height, canopy length, canopy width, and green leaves. We'll create two different models with these variables to predict the plant species and determine which model is a better fit. Additionally, based on the superior model, we'll evaluate its success in correctly classifying a plant.

::: image-grid
![Sabal etonia](misc/sabal_etonia_2.jpeg){alt="Sabal etonia"} <img src="misc/serenoa_repens.jpeg" alt="Serenoa repens" style="width: 45%;"/>

Left: *Sabal etonia*, Right: *Serenoa repens*
:::

Data Citation: Abrahamson, W.G. 2019. Survival, growth and biomass estimates of two dominant palmetto species of south-central Florida from 1981 - 2017, ongoing at 5-year intervals ver 1. Environmental Data Initiative. https://doi.org/10.6073/pasta/f2f96ec76fbbd4b9db431c79a770c4d5

# Exploratory Plots:

```{r}
library(tidyverse) 
library(here)
library(tidymodels) 
library(ggplot2)
library(patchwork)
library(broom)
library(kableExtra)
```

```{r}
#pull in the data
p_df <- read.csv(here("data/palmetto.csv"))

#clean data
palmetto <- p_df %>%
  select(species,height,length,width,green_lvs) %>% 
  mutate(species=as_factor(species)) %>% 
  drop_na()
```

```{r}
#Species Boxplot ~ Green Leaves
leaves_plot <- ggplot(palmetto, 
                     aes(x =as.factor(species),
                         y = green_lvs)) +
  geom_boxplot(fill = "#ADD8E6", color = "#2E75B6",
               alpha = 0.8, 
               outlier.color = "#FF5733",
               outlier.shape = 16, 
               outlier.size = 1) +  
  scale_x_discrete(labels =
                     expression(italic("S.repens"),
                                italic("S.etonia"))) + 
  labs(x = "Species", y = "Green Leaves") +
  theme_minimal() +
  theme(
    axis.title.y = element_text(size = 10),
    axis.title.x = element_text(size = 10),
    axis.text = element_text(size = 10),
    legend.position = "none"
  )
# leaves_plot
```

```{r}
#Species Boxplot ~ Canopy Height
height_plot <- ggplot(palmetto, 
                     aes(x =as.factor(species),
                         y = height)) +
  geom_boxplot(fill = "#ADD8E6", color = "#2E75B6",
               alpha = 0.8, 
               outlier.color = "#FF5733",
               outlier.shape = 16, 
               outlier.size = 1) +  
  scale_x_discrete(labels =
                     expression(italic("S.repens"),
                                italic("S.etonia"))) + 
  labs(x = "Species", y = "Canopy Height") +
  theme_minimal() +
  theme(
    axis.title.y = element_text(size = 10),
    axis.title.x = element_text(size = 10),
    axis.text = element_text(size = 10),
    legend.position = "none"
  )
# height_plot
```

```{r}
#Species Boxplot ~ Canopy Length
length_plot <- ggplot(palmetto, 
                     aes(x =as.factor(species),
                         y = length)) +
  geom_boxplot(fill = "#ADD8E6", color = "#2E75B6",
               alpha = 0.8, 
               outlier.color = "#FF5733",
               outlier.shape = 16, 
               outlier.size = 1) +  
  scale_x_discrete(labels =
                     expression(italic("S.repens"),
                                italic("S.etonia"))) + 
  labs(x = "Species", y = "Canopy Length") +
  theme_minimal() +
  theme(
    axis.title.y = element_text(size = 10),
    axis.title.x = element_text(size = 10),
    axis.text = element_text(size = 10),
    legend.position = "none"
  )
# length_plot
```

```{r}
#Species Boxplot ~ Canopy Width
width_plot <- ggplot(palmetto, 
                     aes(x =as.factor(species),
                         y = width)) +
  geom_boxplot(fill = "#ADD8E6", color = "#2E75B6",
               alpha = 0.8, 
               outlier.color = "#FF5733",
               outlier.shape = 16, 
               outlier.size = 1) +  
  scale_x_discrete(labels =
                     expression(italic("S.repens"),
                                italic("S.etonia"))) + 
  labs(x = "Species", y = "Canopy Width") +
  theme_minimal() +
  theme(
    axis.title.y = element_text(size = 10),
    axis.title.x = element_text(size = 10),
    axis.text = element_text(size = 10),
    legend.position = "none"
  )
# width_plot

```

# Combine Plots:

```{r}
plot1 <- leaves_plot + 
  theme(axis.text.y = element_text(size = 8)) +
  theme(axis.title.x = element_blank())

plot2 <- height_plot +
  theme(axis.text.y = element_text(size = 8)) +
  theme(axis.title.x = element_blank())

plot3 <- length_plot +
  theme(axis.text.y = element_text(size = 8)) +
  theme(axis.title.x = element_blank())

plot4 <- width_plot +
  theme(axis.text.y = element_text(size = 8)) +
  theme(axis.title.x = element_blank())
```

While the species are very similar based on the predictor variables overall, there is slight species differentiation observed when examining "green leaves" and "canopy length."

```{r}
#| label: fig-combined_plot
#| fig-cap: 'Insert'
combinedplot <- plot1 + plot2 + plot3 + plot4
combinedplot
```

# Models:

The models used are as follows:

-   Model 1: The log odds of plant type using plant height, canopy length, canopy width, and green leaves as predictor variables.
-   Model 2: The log odds of plant type using plant height, canopy width, and green leaves (i.e., excluding canopy length for this model).

Note that *S. repens* = speices 1 and *S. etonia* = species 2.

```{r}
# Define formulas:
f1 <- species ~ height + length + width + green_lvs
f2 <- species ~ height + width + green_lvs

# BLR:
blr1 <- glm(formula = f1, data = palmetto, family = binomial)

blr2 <- glm(formula = f2, data = palmetto, family = binomial)

# Summarize:
summary(blr1)
summary(blr2)

```

COEF tell us LOG ODDS:

green leaves has largest effect on log odds. wtf is going on w height - tbd

# Workflow:

```{r}
# Set seed
set.seed(10101)

# Create folds:
surv_folds <- vfold_cv(palmetto, v = 10, repeats = 10)

# Default: 
blr_mdl <- logistic_reg() %>%
  set_engine('glm') 

# Workflows:
blr_wf1 <- workflow() %>%  
  add_model(blr_mdl) %>%
  add_formula(f1)

blr_wf2 <- workflow() %>%  
  add_model(blr_mdl) %>%
  add_formula(f2)

#apply to folded datasetls: 
blr_fit_folds1 <- blr_wf1 %>%
  fit_resamples(surv_folds)

blr_fit_folds2 <- blr_wf2 %>%
  fit_resamples(surv_folds)

blr_fit_folds1
blr_fit_folds2

# Metrics:
collect_metrics(blr_fit_folds1)
collect_metrics(blr_fit_folds2)

```

choose the best performing model, and finally we then run the binary logistic regression on the whole dataset, using the appropriate model, something like (if we decided f1 was the best model):

Run On Entire Dataset:

```{r}
blr_fit_full <- blr_mdl %>%
  fit(formula = f1, data = palmetto)

palmetto_predict <- palmetto %>% 
  mutate(predict(blr_fit_full,new_data = .))
```

TABLE - is this right?

```{r}
# Broom::Tidy 
tidy_output <- tidy(blr_fit_full)

# Create kable table
final_table <- kable(tidy_output, align = "c") %>%
  kable_styling() 

save_kable(final_table, file = "plots/kable_table.html")

```


```{r}
# Calculate predicted species based on probabilities and 50% cutoff
palmetto_predict_prob<- augment(blr_fit_full, new_data = palmetto, type.predict = 'response') %>% 
    mutate(predicted_species = ifelse(.pred_1 > 0.5, "1", "2")) %>%
  select(predicted_species, everything())

head(palmetto_predict_prob)

```

```{r}
# Create a table of observed and predicted species

results_table <- table(palmetto_predict_prob %>% 
  select(predicted_species, species))

tidy(results_table)

species <- c('S.Repens', 'S. Etonia')
predict_correct <- c(5548,5701)
predict_incorrect <- c(564,454)
percent_correct <- c(91,93)

species <- c('S.Repens', 'S. Etonia')
predict_correct <- c(5548, 5701)
predict_incorrect <- c(564, 454)
percent_correct <- c(91, 93)

# Create the data frame
species_correct <- data.frame(species, predict_correct, predict_incorrect, percent_correct)

#kable it
species_kable <- kable(species_correct, align = "c") %>%
  kable_styling() 

save_kable(species_kable, file = "plots/species_table.html")


```

```{r}
# classification_table <- data.frame(
#   Observed_Species = palmetto$species,
#   Predicted_Species = palmetto_predict_prob$predicted_species
# )
# 
# # Count correct/incorrect classifications
# correctly_classified <- sum(classification_table$Observed_Species == classification_table$Predicted_Species)
# incorrectly_classified <- sum(classification_table$Observed_Species != classification_table$Predicted_Species)
# 
# # Percentage correct/incorrect classifications
# percentage_correct <- prop.table(table(classification_table$Observed_Species == classification_table$Predicted_Species)) * 100
# 
# percentage_correct
# 
# # Create a finalized table
# final_table_2 <- cbind(
#   table(classification_table$Observed_Species, classification_table$Predicted_Species),
#   "% Correctly Classified" = percentage_correct
# )
# 
# # caption????
# # caption <- "Classification Results of Logistic Regression Model with 50% Cutoff"
# 
# # Print finalized table with caption
# kable(final_table_2, caption = caption, align = "c")
# save_kable(final_table_2, file = "plots/final_table_2.html")
```
